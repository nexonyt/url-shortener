services:
  backend:
    build: ./backend
    ports:
      - "3000:3000"
    networks:
      - mynetwork
    depends_on:
      - elasticsearch
    volumes:
        - ./nodejs-logs:/src/logs

  # frontend:
  #   build: ./frontend
  #   ports:
  #     - "80:80"
  #   depends_on:
  #     - backend
  #   networks:
  #     - mynetwork

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.15.0
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      # - xpack.security.enabled=true
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - mynetwork

  kibana:
    image: docker.elastic.co/kibana/kibana:7.15.0
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:  
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - mynetwork

  filebeat:
    image: docker.elastic.co/beats/filebeat:7.15.0
    container_name: filebeat
    user: root
    volumes:
      - ./filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - ./nodejs-logs:/src/logs
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
      - elasticsearch
      - kibana
    networks:
      - mynetwork
    command: ["filebeat", "-e", "-strict.perms=false"]


  documentation:
    image: nginx:latest
    container_name: documentation
    volumes:
      - ./documentation:/usr/share/nginx/html:ro
    ports:
      - "8080:80"

volumes:
    elasticsearch_data:
        driver: local

networks:
  mynetwork:
    driver: bridge

